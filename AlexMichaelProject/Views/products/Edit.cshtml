@model AlexMichaelProject.Models.product

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    <div class="col-md-3" style="width:20%;float:left;">
        @{ Html.RenderAction("SideMenu", "Home");}
    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <div class="col-md-3" style="width:80%;float:left;margin-top:20px;">
        <form id="myForm">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <h4>Edit Product: @Model.product1</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.product1)

                    <div class="form-group">
                        @Html.LabelFor(model => model.type, "Type:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.manufacturer, "Manufacturer:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("manufacturer", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.manufacturer, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.clubName, "Club Name:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("clubName", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.clubName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cost, "Cost:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cost, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cost, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.size, "Size:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.size, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.size, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.photo, "Photo:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.photo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.photo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @if ((String)Session["power"] == "admin")
                            {
                                <input type="button" value="Save" class="btn btn-default" id="btnSave" />
                            }
                            <p class="btn btn-primary btn-md">
                                @Html.ActionLink("Back to List", "Index")
                            </p>
                        </div>
                    </div>
                </div>
            }
        </form>
    </div>
</body>
</html>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        $("#btnSave").click(function () {
            //debugger
            var data = $("#myForm").serialize();

            $.ajax({
                type: "POST",
                url: "/products/Edit",
                data: data,
                async: true,
                success: function (response) {
                    // debugger
                    if (response == "true") {
                        alert("Edit successfully");
                        //window.location.href = "/teams/Index";
                    }
                }
            })
        })
    })

</script>


<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
