@model AlexMichaelProject.Models.match

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    <div class="col-md-3" style="width:20%;float:left;">
        @{ Html.RenderAction("SideMenu", "Home");}
    </div>
    <div class="col-md-3" style="width:80%;float:left;margin-top:20px;">
        <form id="myForm">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>match</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.matchID,"Match ID:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="text" class="form-control" value=@Session["matchid"] name="matchID" />
                            @Html.ValidationMessageFor(model => model.matchID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.teamA, "Team A:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("teamA", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.teamA, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.teamB, "Team B:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("teamB", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.teamB, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.stadium,"Stadium:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.stadium, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.stadium, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.league, "League:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.league, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.league, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.date,"Date:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @if ((String)Session["power"] == "admin")
                            {
                                <input type="button" value="Create" class="btn btn-default" id="btnCreate" />
                            }
                            <p class="btn btn-primary btn-md">@Html.ActionLink("Back to List", "Index")</p>
                        </div>
                    </div>
                </div>
            }
        </form>
    </div>
</body>
</html>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        $("#btnCreate").click(function () {
            //debugger
            var data = $("#myForm").serialize();

            $.ajax({
                type: "POST",
                url: "/matches/Create",
                data: data,
                async: true,
                success: function (response) {
                    //debugger
                    if (response == "true") {
                        alert("Match Created successfully!");
                        window.location.href = "/matches/Index";
                    }
                    else {
                        alert("Sorry the Match ID Not Available! Please choose a different ID.");
                    }
                }
            })
        })
    })

</script>


<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

