@model AlexMichaelProject.Models.ticket

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    <form id="myForm">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>ticket</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ticketID)

                <div class="form-group">
                    @Html.LabelFor(model => model.matchID, "matchID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("matchID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.matchID, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.matchID, "Match ID:", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" value=@Html.DisplayFor(model => model.matchID) class="form-control" disabled />
                        @Html.ValidationMessageFor(model => model.matchID, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.seatNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.seatNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.seatNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.cost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.cost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.seatType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.seatType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.seatType, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.seatType, "Seat Type:", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" value=@Html.DisplayFor(model => model.seatType) class="form-control" disabled />
                        @Html.ValidationMessageFor(model => model.seatType, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Save" class="btn btn-default" id="btnSave" />
                    </div>
                </div>
            </div>
        }
    </form>

    <div>
        @Html.ActionLink("Back to List", "Index")
        @*@Ajax.ActionLink("Back to List", "Index", "tickets", new AjaxOptions()
   {
       UpdateTargetId = "show"
   })*@
    </div>
</body>
</html>


<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        $("#btnSave").click(function () {
            //debugger
            var data = $("#myForm").serialize();

            $.ajax({
                type: "POST",
                url: "/tickets/Edit",
                data: data,
                async: true,
                success: function (response) {
                    // debugger
                    if (response == "true") {
                        alert("Edit successfully");
                        //window.location.href = "/tickets/Index";
                    }
                }
            })
        })
    })

</script>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>